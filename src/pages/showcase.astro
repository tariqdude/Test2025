---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import ModernButton from '../components/ui/ModernButton.astro';
import ModernCard from '../components/ui/ModernCard.astro';
import AdvancedCard from '../components/ui/AdvancedCard.astro';
import ReactiveCounter from '../components/solid/ReactiveCounter';
import ThreeScene from '../components/react/ThreeScene';
import ParticleCanvas from '../components/svelte/ParticleCanvas.svelte';

const featureCategories = [
  {
    title: "üé® UI Components",
    description: "Modern, interactive UI components with advanced animations",
    items: [
      { name: "Modern Buttons", description: "Enhanced buttons with loading states, icons, and multiple variants", demo: "button" },
      { name: "Advanced Cards", description: "Cards with glassmorphism, neumorphism, and particle effects", demo: "card" },
      { name: "Interactive Forms", description: "Smart forms with real-time validation and feedback", demo: "form" },
      { name: "Navigation Systems", description: "Responsive navigation with smooth transitions", demo: "nav" }
    ]
  },
  {
    title: "üìä Data Visualization", 
    description: "Real-time charts, graphs, and interactive data displays",
    items: [
      { name: "Live Analytics", description: "Real-time performance monitoring and metrics", demo: "analytics" },
      { name: "Interactive Charts", description: "Dynamic charts with hover effects and animations", demo: "charts" },
      { name: "3D Visualizations", description: "Three.js powered 3D data representations", demo: "3d" },
      { name: "Progress Indicators", description: "Animated progress bars and status indicators", demo: "progress" }
    ]
  },
  {
    title: "üîß Development Tools",
    description: "Enhanced development and debugging capabilities", 
    items: [
      { name: "Error Analytics", description: "Comprehensive error tracking and analysis", demo: "errors" },
      { name: "Performance Monitor", description: "Real-time performance metrics and optimization", demo: "performance" },
      { name: "Code Quality", description: "Automated code review and quality assessment", demo: "quality" },
      { name: "Build Pipeline", description: "Visual build status and deployment tracking", demo: "build" }
    ]
  },
  {
    title: "üéØ Interactive Features",
    description: "Engaging user interactions and animations",
    items: [
      { name: "Particle Systems", description: "Interactive particle animations and effects", demo: "particles" },
      { name: "Reactive Elements", description: "Components that respond to user interactions", demo: "reactive" },
      { name: "Gesture Controls", description: "Touch and gesture-based interactions", demo: "gestures" },
      { name: "Voice Interface", description: "Voice commands and speech recognition", demo: "voice" }
    ]
  }
];

const showcaseStats = {
  totalComponents: 74,
  frameworks: 5,
  animations: 23,
  interactions: 18,
  performance: 96
};
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title="Interactive Features Showcase | Elite Project" description="Comprehensive showcase of modern UI components, animations, and interactive features" />
    <style>
      .showcase-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
        gap: 2rem;
      }
      
      .demo-area {
        min-height: 200px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 1rem;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        overflow: hidden;
      }
      
      .stats-counter {
        font-size: 2.5rem;
        font-weight: bold;
        background: linear-gradient(45deg, #667eea, #764ba2);
        background-clip: text;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
      }
      
      @keyframes float-showcase {
        0%, 100% { transform: translateY(0px) rotate(0deg); }
        25% { transform: translateY(-10px) rotate(1deg); }
        50% { transform: translateY(-20px) rotate(0deg); }
        75% { transform: translateY(-10px) rotate(-1deg); }
      }
      
      .float-showcase {
        animation: float-showcase 6s ease-in-out infinite;
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <div class="min-h-screen bg-gradient-to-br from-indigo-50 via-purple-50 to-pink-50 dark:from-indigo-900 dark:via-purple-900 dark:to-pink-900">
        
        <!-- Hero Section -->
        <section class="relative py-20 overflow-hidden">
          <div class="absolute inset-0 bg-gradient-to-r from-blue-600/20 to-purple-600/20 backdrop-blur-3xl"></div>
          
          <!-- Floating Elements -->
          <div class="absolute inset-0 overflow-hidden pointer-events-none">
            <div class="absolute top-1/4 left-1/4 w-64 h-64 bg-blue-400/20 rounded-full blur-3xl float-showcase"></div>
            <div class="absolute top-3/4 right-1/4 w-80 h-80 bg-purple-400/20 rounded-full blur-3xl float-showcase" style="animation-delay: -2s"></div>
            <div class="absolute bottom-1/4 left-1/2 w-72 h-72 bg-pink-400/20 rounded-full blur-3xl float-showcase" style="animation-delay: -4s"></div>
          </div>
          
          <div class="relative container mx-auto px-6 text-center">
            <h1 class="text-5xl lg:text-7xl font-bold bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 bg-clip-text text-transparent mb-6 animate-slide-down">
              üöÄ Interactive Features Showcase
            </h1>
            <p class="text-xl text-gray-600 dark:text-gray-300 mb-8 max-w-3xl mx-auto animate-slide-up" style="animation-delay: 0.2s">
              Explore our comprehensive collection of modern UI components, real-time visualizations, and interactive features designed for the next generation of web applications.
            </p>
            
            <!-- Action Buttons -->
            <div class="flex flex-wrap justify-center gap-4 mb-12 animate-fade-in" style="animation-delay: 0.4s">
              <ModernButton variant="gradient" size="lg" leftIcon="üéØ">
                Explore Components
              </ModernButton>
              <ModernButton variant="outline" size="lg" leftIcon="üìñ">
                View Documentation
              </ModernButton>
              <ModernButton variant="ghost" size="lg" leftIcon="‚ö°">
                Live Demo
              </ModernButton>
            </div>
            
            <!-- Stats Overview -->
            <div class="grid grid-cols-2 md:grid-cols-5 gap-6 max-w-4xl mx-auto animate-scale" style="animation-delay: 0.6s">
              <div class="text-center">
                <div class="stats-counter">{showcaseStats.totalComponents}</div>
                <div class="text-sm text-gray-600 dark:text-gray-400">Components</div>
              </div>
              <div class="text-center">
                <div class="stats-counter">{showcaseStats.frameworks}</div>
                <div class="text-sm text-gray-600 dark:text-gray-400">Frameworks</div>
              </div>
              <div class="text-center">
                <div class="stats-counter">{showcaseStats.animations}</div>
                <div class="text-sm text-gray-600 dark:text-gray-400">Animations</div>
              </div>
              <div class="text-center">
                <div class="stats-counter">{showcaseStats.interactions}</div>
                <div class="text-sm text-gray-600 dark:text-gray-400">Interactions</div>
              </div>
              <div class="text-center">
                <div class="stats-counter">{showcaseStats.performance}%</div>
                <div class="text-sm text-gray-600 dark:text-gray-400">Performance</div>
              </div>
            </div>
          </div>
        </section>

        <!-- Features Grid -->
        <section class="py-20">
          <div class="container mx-auto px-6">
            
            <!-- Interactive Demo Section -->
            <div class="mb-16">
              <h2 class="text-3xl font-bold text-center mb-8">üéÆ Live Interactive Demos</h2>
              <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                
                <!-- Reactive Counter Demo -->
                <AdvancedCard variant="glass" interactive={true} glow={true} animation="float" animationDelay={0.2}>
                  <div class="text-center">
                    <h3 class="text-xl font-semibold mb-4">üî¢ Reactive Counter</h3>
                    <div class="my-8">
                      <ReactiveCounter client:load />
                    </div>
                    <p class="text-sm text-gray-600 dark:text-gray-400">
                      Solid.js reactive counter with real-time updates and animations
                    </p>
                  </div>
                </AdvancedCard>
                
                <!-- 3D Scene Demo -->
                <AdvancedCard variant="neon" interactive={true} particles={true} animation="pulse" animationDelay={0.4}>
                  <div class="text-center">
                    <h3 class="text-xl font-semibold mb-4">üåê 3D Visualization</h3>
                    <div class="h-48 rounded-lg overflow-hidden my-4">
                      <ThreeScene client:load />
                    </div>
                    <p class="text-sm text-gray-600 dark:text-gray-400">
                      Three.js powered 3D scenes with interactive controls
                    </p>
                  </div>
                </AdvancedCard>
                
                <!-- Particle Canvas Demo -->
                <AdvancedCard variant="holographic" interactive={true} tilt={true} animation="slide" animationDelay={0.6}>
                  <div class="text-center">
                    <h3 class="text-xl font-semibold mb-4">‚ú® Particle System</h3>
                    <div class="h-48 rounded-lg overflow-hidden my-4">
                      <ParticleCanvas client:load />
                    </div>
                    <p class="text-sm text-gray-600 dark:text-gray-400">
                      Interactive particle system with mouse tracking
                    </p>
                  </div>
                </AdvancedCard>
              </div>
            </div>

            <!-- Component Categories -->
            <div class="space-y-16">
              {featureCategories.map((category, categoryIndex) => (
                <div class="animate-slide-up" style={`animation-delay: ${categoryIndex * 0.2}s`}>
                  <div class="text-center mb-8">
                    <h2 class="text-3xl font-bold mb-4">{category.title}</h2>
                    <p class="text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
                      {category.description}
                    </p>
                  </div>
                  
                  <div class="showcase-grid">
                    {category.items.map((item, itemIndex) => (
                      <ModernCard 
                        variant="glass" 
                        hover={true} 
                        glow={itemIndex % 2 === 0}
                        animated={true}
                        direction={itemIndex % 2 === 0 ? 'left' : 'right'}
                        delay={itemIndex * 0.1}
                      >
                        <div class="h-full flex flex-col">
                          <div class="demo-area mb-4">
                            <div class="text-4xl opacity-80">
                              {item.demo === 'button' ? 'üîò' :
                               item.demo === 'card' ? 'üé¥' :
                               item.demo === 'form' ? 'üìù' :
                               item.demo === 'nav' ? 'üß≠' :
                               item.demo === 'analytics' ? 'üìä' :
                               item.demo === 'charts' ? 'üìà' :
                               item.demo === '3d' ? 'üåê' :
                               item.demo === 'progress' ? '‚è≥' :
                               item.demo === 'errors' ? 'üîç' :
                               item.demo === 'performance' ? '‚ö°' :
                               item.demo === 'quality' ? '‚úÖ' :
                               item.demo === 'build' ? 'üî®' :
                               item.demo === 'particles' ? '‚ú®' :
                               item.demo === 'reactive' ? 'üîÑ' :
                               item.demo === 'gestures' ? 'üëÜ' :
                               item.demo === 'voice' ? 'üé§' : 'üéØ'}
                            </div>
                            <div class="absolute inset-0 bg-gradient-to-br from-white/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                          </div>
                          
                          <div class="flex-1">
                            <h3 class="text-xl font-semibold mb-3">{item.name}</h3>
                            <p class="text-gray-600 dark:text-gray-400 text-sm mb-4">
                              {item.description}
                            </p>
                          </div>
                          
                          <div class="flex gap-2 mt-auto">
                            <ModernButton variant="outline" size="sm" className="flex-1">
                              View Demo
                            </ModernButton>
                            <ModernButton variant="ghost" size="sm">
                              üìñ Docs
                            </ModernButton>
                          </div>
                        </div>
                      </ModernCard>
                    ))}
                  </div>
                </div>
              ))}
            </div>

            <!-- Call to Action -->
            <div class="text-center py-16">
              <AdvancedCard 
                variant="holographic" 
                size="lg" 
                className="max-w-4xl mx-auto" 
                interactive={true}
                glow={true}
                animation="float"
              >
                <h2 class="text-3xl font-bold mb-6">üöÄ Ready to Build Something Amazing?</h2>
                <p class="text-lg text-gray-600 dark:text-gray-300 mb-8 max-w-2xl mx-auto">
                  Explore our comprehensive component library and start building your next project with cutting-edge UI components and interactive features.
                </p>
                <div class="flex flex-wrap justify-center gap-4">
                  <ModernButton variant="neon" size="lg" leftIcon="üéØ">
                    Get Started
                  </ModernButton>
                  <ModernButton variant="outline" size="lg" leftIcon="üìö">
                    Documentation
                  </ModernButton>
                  <ModernButton variant="ghost" size="lg" leftIcon="üí¨">
                    Join Community
                  </ModernButton>
                </div>
              </AdvancedCard>
            </div>

          </div>
        </section>

      </div>
    </main>
    <Footer />
  </body>
</html>
