---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

type PainPoint = { title: string; description: string };
type WorkflowStep = { heading: string; detail: string };
type ChecklistItem = { label: string; bullets: string[] };
type ResourceLink = { label: string; description: string; href: string };

const painPoints: PainPoint[] = [
  {
    title: "Live scripts add fragility",
    description:
      "Client-side charts and hot reloading APIs fail on static hosts such as GitHub Pages, so outages were common.",
  },
  {
    title: "Opaque runtime state",
    description:
      "Troubleshooting required digging through console logs and timers instead of reviewing commit history.",
  },
  {
    title: "Heavy dependency footprint",
    description:
      "Multiple framework islands forced extra npm installs, slowing every build despite little day-to-day value.",
  },
];

const workflow: WorkflowStep[] = [
  {
    heading: "Capture signals",
    detail: "Gather lint, test, and monitoring results from your CI provider or local scripts as markdown-ready notes.",
  },
  {
    heading: "Summarise trends",
    detail: "Translate raw logs into a short narrative that highlights regressions, mitigations, and owners.",
  },
  {
    heading: "Version the report",
    detail: "Commit the update alongside code changes so reviewers can diff new risks before approving merges.",
  },
  {
    heading: "Share with stakeholders",
    detail: "Post the rendered page or exported PDF to Slack, email, or status channels for full visibility.",
  },
];

const checklist: ChecklistItem[] = [
  {
    label: "Accessibility",
    bullets: ["Keyboard traps cleared", "Color contrast verified", "ARIA labels audited"],
  },
  {
    label: "Performance",
    bullets: ["Largest Contentful Paint target met", "Bundle size delta recorded", "Image optimisations reviewed"],
  },
  {
    label: "Security",
    bullets: ["Dependency scan exported", "Headers configuration noted", "Secrets rotation schedule confirmed"],
  },
];

const resources: ResourceLink[] = [
  {
    label: "Read the static analysis playbook",
    description: "Learn how to translate live dashboards into lightweight, maintainable review checklists.",
    href: "/services",
  },
  {
    label: "Talk to the team",
    description: "Need help wiring reports into CI? Drop us a note and we will walk through the migration plan.",
    href: "/contact",
  },
];
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead
      title="Error Dashboard | Elite Project"
      description="Learn why the interactive dashboard was retired and how to run static error reviews instead."
    />
  </head>
  <body class="bg-neutral-50 text-neutral-900">
    <Header />
    <main>
      <section class="bg-neutral-900 text-neutral-50">
        <div class="mx-auto max-w-4xl px-6 py-24">
          <p class="text-sm font-semibold uppercase tracking-[0.3em] text-neutral-400">Error reviews</p>
          <h1 class="mt-6 text-4xl font-semibold sm:text-5xl">Operational insight without live dashboards.</h1>
          <p class="mt-6 text-lg text-neutral-300">
            The original error dashboard relied on client-only frameworks and background polling. On static hosting we now
            document issues through curated updates, providing the same context with zero runtime surprises.
          </p>
        </div>
      </section>

      <section class="bg-white">
        <div class="mx-auto max-w-5xl px-6 py-16">
          <h2 class="text-2xl font-semibold text-neutral-900">Why we removed the live dashboard</h2>
          <div class="mt-8 grid gap-6 sm:grid-cols-3">
            {painPoints.map((item) => (
              <article class="rounded-2xl border border-neutral-200 bg-neutral-50 p-6">
                <h3 class="text-lg font-semibold text-neutral-900">{item.title}</h3>
                <p class="mt-3 text-sm text-neutral-600">{item.description}</p>
              </article>
            ))}
          </div>
        </div>
      </section>

      <section class="bg-neutral-50">
        <div class="mx-auto max-w-4xl px-6 py-16">
          <h2 class="text-2xl font-semibold text-neutral-900">Static error review workflow</h2>
          <ol class="mt-8 space-y-4 text-sm text-neutral-600">
            {workflow.map((step, index) => (
              <li class="flex items-start gap-4 rounded-2xl border border-neutral-200 bg-white px-5 py-4">
                <span class="flex h-8 w-8 items-center justify-center rounded-full bg-brand-600 text-sm font-semibold text-white">
                  {index + 1}
                </span>
                <span>
                  <span class="block text-base font-semibold text-neutral-900">{step.heading}</span>
                  <span class="mt-1 block">{step.detail}</span>
                </span>
              </li>
            ))}
          </ol>
        </div>
      </section>

      <section class="bg-white">
        <div class="mx-auto max-w-5xl px-6 py-16">
          <h2 class="text-2xl font-semibold text-neutral-900">Checks to keep on the radar</h2>
          <div class="mt-8 grid gap-6 sm:grid-cols-3">
            {checklist.map((group) => (
              <article class="rounded-2xl border border-neutral-200 bg-neutral-50 p-6">
                <h3 class="text-lg font-semibold text-neutral-900">{group.label}</h3>
                <ul class="mt-3 space-y-2 text-sm text-neutral-600">
                  {group.bullets.map((bullet) => (
                    <li class="flex items-center gap-2">
                      <span class="inline-flex h-2 w-2 rounded-full bg-brand-600"></span>
                      <span>{bullet}</span>
                    </li>
                  ))}
                </ul>
              </article>
            ))}
          </div>
        </div>
      </section>

      <section class="bg-neutral-900 text-neutral-50">
        <div class="mx-auto max-w-4xl px-6 py-16">
          <h2 class="text-2xl font-semibold text-neutral-50">Keep the conversation going</h2>
          <div class="mt-8 grid gap-6 sm:grid-cols-2">
            {resources.map((link) => (
              <a
                class="block rounded-2xl border border-neutral-800 bg-neutral-800/60 px-6 py-6 transition hover:border-brand-500 hover:bg-neutral-800"
                href={link.href}
              >
                <span class="text-lg font-semibold text-neutral-50">{link.label}</span>
                <span class="mt-2 block text-sm text-neutral-300">{link.description}</span>
              </a>
            ))}
          </div>
        </div>
      </section>
    </main>
    <Footer />
  </body>
</html>
