---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import AstroShowcase from '../components/AstroShowcase.astro';
import CodeShowcase from '../components/CodeShowcase.astro';
import FrameworkShowcase from '../components/FrameworkShowcase.astro';
import PerformanceMonitor from '../components/PerformanceMonitor.astro';
import ThemeProvider from '../components/ThemeProvider.astro';
import ThemeSelector from '../components/ThemeSelector.astro';

// Framework Components
import ThreeScene from '../components/react/ThreeScene.tsx';
// import Card3D from '../components/vue/Card3D.vue';
import ParticleCanvas from '../components/svelte/ParticleCanvas.svelte';
import ReactiveCounter from '../components/solid/ReactiveCounter.tsx';
import AnimatedChart from '../components/preact/AnimatedChart.tsx';

const title = 'Astro Capabilities Showcase';
const description = 'Explore the full power of Astro with multiple frameworks, advanced animations, and cutting-edge web technologies.';
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      /* Global animations and effects */
      .gradient-bg {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        opacity: 0.1;
      }
      
      .floating-shapes {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: -1;
      }
      
      .shape {
        position: absolute;
        border-radius: 50%;
        opacity: 0.1;
        animation: float 20s infinite ease-in-out;
      }
      
      .shape:nth-child(1) {
        width: 100px;
        height: 100px;
        background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
        top: 20%;
        left: 10%;
        animation-delay: 0s;
      }
      
      .shape:nth-child(2) {
        width: 150px;
        height: 150px;
        background: linear-gradient(45deg, #a8edea, #fed6e3);
        top: 60%;
        right: 10%;
        animation-delay: -5s;
      }
      
      .shape:nth-child(3) {
        width: 80px;
        height: 80px;
        background: linear-gradient(45deg, #ffecd2, #fcb69f);
        bottom: 30%;
        left: 20%;
        animation-delay: -10s;
      }
      
      .shape:nth-child(4) {
        width: 120px;
        height: 120px;
        background: linear-gradient(45deg, #a8edea, #fed6e3);
        top: 10%;
        right: 30%;
        animation-delay: -15s;
      }
      
      @keyframes float {
        0%, 100% {
          transform: translateY(0px) rotate(0deg);
        }
        33% {
          transform: translateY(-30px) rotate(120deg);
        }
        66% {
          transform: translateY(20px) rotate(240deg);
        }
      }
      
      .section-divider {
        height: 2px;
        background: linear-gradient(90deg, transparent, #8b5cf6, #ec4899, transparent);
        margin: 4rem 0;
        position: relative;
        overflow: hidden;
      }
      
      .section-divider::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
        animation: shimmer 3s infinite;
      }
      
      @keyframes shimmer {
        0% { left: -100%; }
        100% { left: 100%; }
      }
      
      .framework-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
        gap: 2rem;
        margin: 2rem 0;
      }
      
      @media (max-width: 768px) {
        .framework-grid {
          grid-template-columns: 1fr;
          gap: 1rem;
        }
      }
      
      .scroll-indicator {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 4px;
        background: linear-gradient(90deg, #8b5cf6, #ec4899, #06b6d4);
        transform-origin: left;
        transform: scaleX(0);
        z-index: 1000;
        transition: transform 0.1s ease-out;
      }
      
      .theme-controls {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1001;
        display: flex;
        gap: 1rem;
        align-items: center;
      }
    </style>
  </head>
  <body class="bg-gray-900 text-white">
    <ThemeProvider theme="dark">
      <!-- Animated background -->
      <div class="gradient-bg"></div>
      <div class="floating-shapes">
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
      </div>
      
      <!-- Scroll progress indicator -->
      <div class="scroll-indicator" id="scroll-progress"></div>
      
      <!-- Theme Selector -->
      <div class="theme-controls">
        <ThemeSelector currentTheme="dark" />
      </div>
      
      <Header />
      
      <main class="container mx-auto px-4 py-8 space-y-16">
      <!-- Astro Showcase Hero -->
      <section>
        <AstroShowcase />
      </section>
      
      <div class="section-divider"></div>
      
      <!-- Framework Integration Demo -->
      <section class="space-y-8">
        <div class="text-center space-y-4">
          <h2 class="text-5xl font-bold bg-gradient-to-r from-purple-400 via-pink-400 to-cyan-400 bg-clip-text text-transparent">
            Live Framework Demonstrations
          </h2>
          <p class="text-xl text-gray-300 max-w-4xl mx-auto">
            Experience how Astro seamlessly integrates multiple frameworks in a single application. 
            Each component below is built with a different framework, showcasing Astro's island architecture.
          </p>
        </div>
        
        <FrameworkShowcase title="Multi-Framework Integration" framework="astro" color="purple" />
        
        <div class="framework-grid">
          <!-- React + Three.js 3D Scene -->
          <div class="bg-gradient-to-br from-gray-900/80 to-gray-800/80 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/50">
            <div class="flex items-center justify-between mb-4">
              <div class="flex items-center space-x-3">
                <div class="w-3 h-3 bg-blue-400 rounded-full animate-pulse"></div>
                <h3 class="text-xl font-semibold text-white">React + Three.js</h3>
              </div>
              <span class="text-xs text-blue-400 px-2 py-1 bg-blue-400/20 rounded">client:load</span>
            </div>
            <div class="h-80 rounded-lg overflow-hidden">
              <ThreeScene client:only="react" />
            </div>
            <p class="text-gray-300 text-sm mt-4">
              Interactive 3D scene with particle systems, distortion materials, and orbit controls powered by React Three Fiber.
            </p>
          </div>
          
          <!-- Vue 3D Card -->
          <div class="bg-gradient-to-br from-gray-900/80 to-gray-800/80 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/50">
            <div class="flex items-center justify-between mb-4">
              <div class="flex items-center space-x-3">
                <div class="w-3 h-3 bg-green-400 rounded-full animate-pulse"></div>
                <h3 class="text-xl font-semibold text-white">Vue 3 Composition</h3>
              </div>
              <span class="text-xs text-green-400 px-2 py-1 bg-green-400/20 rounded">client:visible</span>
            </div>
            <div class="h-80 flex items-center justify-center">
              <div class="p-4 bg-white/20 rounded backdrop-blur">
                Vue component temporarily disabled
              </div>
            </div>
            <p class="text-gray-300 text-sm mt-4">
              3D transforming card with mouse tracking, progress animations, and reactive Vue 3 Composition API.
            </p>
          </div>
          
          <!-- Svelte Particle Canvas -->
          <div class="bg-gradient-to-br from-gray-900/80 to-gray-800/80 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/50">
            <div class="flex items-center justify-between mb-4">
              <div class="flex items-center space-x-3">
                <div class="w-3 h-3 bg-orange-400 rounded-full animate-pulse"></div>
                <h3 class="text-xl font-semibold text-white">Svelte Canvas</h3>
              </div>
              <span class="text-xs text-orange-400 px-2 py-1 bg-orange-400/20 rounded">client:idle</span>
            </div>
            <div class="h-80 rounded-lg overflow-hidden">
              <ParticleCanvas client:idle />
            </div>
            <p class="text-gray-300 text-sm mt-4">
              Interactive particle system with click events, gradient backgrounds, and Svelte's reactive patterns.
            </p>
          </div>
          
          <!-- Solid.js Reactive Counter -->
          <div class="bg-gradient-to-br from-gray-900/80 to-gray-800/80 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/50">
            <div class="flex items-center justify-between mb-4">
              <div class="flex items-center space-x-3">
                <div class="w-3 h-3 bg-blue-500 rounded-full animate-pulse"></div>
                <h3 class="text-xl font-semibold text-white">Solid.js Signals</h3>
              </div>
              <span class="text-xs text-blue-500 px-2 py-1 bg-blue-500/20 rounded">client:load</span>
            </div>
            <div class="h-80 flex items-center justify-center">
              <ReactiveCounter client:load />
            </div>
            <p class="text-gray-300 text-sm mt-4">
              Reactive counter with signals, effects, auto-increment features, and particle explosion animations.
            </p>
          </div>
          
          <!-- Preact Animated Chart -->
          <div class="bg-gradient-to-br from-gray-900/80 to-gray-800/80 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/50 md:col-span-2">
            <div class="flex items-center justify-between mb-4">
              <div class="flex items-center space-x-3">
                <div class="w-3 h-3 bg-purple-400 rounded-full animate-pulse"></div>
                <h3 class="text-xl font-semibold text-white">Preact Data Visualization</h3>
              </div>
              <span class="text-xs text-purple-400 px-2 py-1 bg-purple-400/20 rounded">client:visible</span>
            </div>
            <div class="h-80">
              <AnimatedChart client:visible />
            </div>
            <p class="text-gray-300 text-sm mt-4">
              Animated bar chart with smooth transitions, real-time data updates, and interactive hover effects using Preact hooks.
            </p>
          </div>
        </div>
      </section>
      
      <div class="section-divider"></div>
      
      <!-- Code Examples -->
      <section class="space-y-8">
        <div class="text-center space-y-4">
          <h2 class="text-5xl font-bold bg-gradient-to-r from-cyan-400 via-blue-400 to-purple-400 bg-clip-text text-transparent">
            Code Examples & Patterns
          </h2>
          <p class="text-xl text-gray-300 max-w-4xl mx-auto">
            Explore real-world Astro patterns and see how easy it is to build modern web applications.
          </p>
        </div>
        
        <CodeShowcase />
      </section>
      
      <div class="section-divider"></div>
      
      <!-- Performance & Developer Experience -->
      <section class="space-y-8">
        <div class="text-center space-y-4">
          <h2 class="text-5xl font-bold bg-gradient-to-r from-green-400 via-emerald-400 to-teal-400 bg-clip-text text-transparent">
            Developer Experience
          </h2>
          <p class="text-xl text-gray-300 max-w-4xl mx-auto">
            Built for developers who want the best of both worlds: modern tooling and optimal performance.
          </p>
        </div>
        
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          <!-- TypeScript -->
          <div class="bg-gradient-to-br from-blue-900/50 to-blue-800/50 p-8 rounded-2xl border border-blue-700/30">
            <div class="text-4xl mb-4">📘</div>
            <h3 class="text-2xl font-bold text-blue-300 mb-4">TypeScript First</h3>
            <p class="text-gray-300 mb-4">Full TypeScript support out of the box with intelligent autocomplete and type checking.</p>
            <div class="space-y-2 text-sm">
              <div class="flex items-center space-x-2">
                <div class="w-2 h-2 bg-blue-400 rounded-full"></div>
                <span class="text-gray-300">Type-safe component props</span>
              </div>
              <div class="flex items-center space-x-2">
                <div class="w-2 h-2 bg-blue-400 rounded-full"></div>
                <span class="text-gray-300">Content collection schemas</span>
              </div>
              <div class="flex items-center space-x-2">
                <div class="w-2 h-2 bg-blue-400 rounded-full"></div>
                <span class="text-gray-300">API route validation</span>
              </div>
            </div>
          </div>
          
          <!-- Hot Reload -->
          <div class="bg-gradient-to-br from-orange-900/50 to-red-800/50 p-8 rounded-2xl border border-orange-700/30">
            <div class="text-4xl mb-4">🔥</div>
            <h3 class="text-2xl font-bold text-orange-300 mb-4">Lightning Fast HMR</h3>
            <p class="text-gray-300 mb-4">Instant hot module replacement keeps your development flow uninterrupted.</p>
            <div class="space-y-2 text-sm">
              <div class="flex items-center space-x-2">
                <div class="w-2 h-2 bg-orange-400 rounded-full"></div>
                <span class="text-gray-300">Sub-second rebuilds</span>
              </div>
              <div class="flex items-center space-x-2">
                <div class="w-2 h-2 bg-orange-400 rounded-full"></div>
                <span class="text-gray-300">State preservation</span>
              </div>
              <div class="flex items-center space-x-2">
                <div class="w-2 h-2 bg-orange-400 rounded-full"></div>
                <span class="text-gray-300">Error overlay</span>
              </div>
            </div>
          </div>
          
          <!-- Deployment -->
          <div class="bg-gradient-to-br from-purple-900/50 to-pink-800/50 p-8 rounded-2xl border border-purple-700/30">
            <div class="text-4xl mb-4">🚀</div>
            <h3 class="text-2xl font-bold text-purple-300 mb-4">Deploy Anywhere</h3>
            <p class="text-gray-300 mb-4">Static sites, SSR, edge functions - deploy to any platform with zero configuration.</p>
            <div class="space-y-2 text-sm">
              <div class="flex items-center space-x-2">
                <div class="w-2 h-2 bg-purple-400 rounded-full"></div>
                <span class="text-gray-300">Vercel, Netlify, Cloudflare</span>
              </div>
              <div class="flex items-center space-x-2">
                <div class="w-2 h-2 bg-purple-400 rounded-full"></div>
                <span class="text-gray-300">Node.js, Deno, Edge</span>
              </div>
              <div class="flex items-center space-x-2">
                <div class="w-2 h-2 bg-purple-400 rounded-full"></div>
                <span class="text-gray-300">Static or SSR</span>
              </div>
            </div>
          </div>
        </div>
      </section>
      
      <!-- Call to Action -->
      <section class="text-center space-y-8 py-16">
        <div class="space-y-6">
          <h2 class="text-6xl font-bold bg-gradient-to-r from-purple-400 via-pink-400 to-cyan-400 bg-clip-text text-transparent">
            Ready to Build?
          </h2>
          <p class="text-xl text-gray-300 max-w-3xl mx-auto">
            Join thousands of developers building the next generation of web applications with Astro.
          </p>
        </div>
        
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a 
            href="https://docs.astro.build/en/getting-started/"
            class="px-8 py-4 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full text-white font-semibold hover:shadow-lg hover:shadow-purple-500/25 transition-all duration-300 hover:scale-105"
          >
            Get Started
          </a>
          <a 
            href="https://github.com/withastro/astro"
            class="px-8 py-4 bg-transparent border-2 border-gray-700 rounded-full text-white font-semibold hover:border-gray-600 hover:bg-gray-800/50 transition-all duration-300"
          >
            View on GitHub
          </a>
        </div>
      </section>
    </main>
    
    <Footer />
    
    <!-- Performance Monitor -->
    <PerformanceMonitor />
    
    </ThemeProvider>
    
    <script>
      // Import theme utilities
      import '../styles/theme';
      
      // Scroll progress indicator
      function updateScrollProgress() {
        const scrollTop = window.pageYOffset;
        const docHeight = document.body.scrollHeight - window.innerHeight;
        const scrollPercent = scrollTop / docHeight;
        
        const progressBar = document.getElementById('scroll-progress');
        if (progressBar) {
          progressBar.style.transform = `scaleX(${scrollPercent})`;
        }
      }
      
      window.addEventListener('scroll', updateScrollProgress);
      
      // Intersection Observer for animations
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const element = entry.target;
            if (element instanceof HTMLElement) {
              element.style.opacity = '1';
              element.style.transform = 'translateY(0)';
            }
          }
        });
      }, observerOptions);
      
      // Observe all sections
      document.querySelectorAll('section').forEach(section => {
        if (section instanceof HTMLElement) {
          section.style.opacity = '0';
          section.style.transform = 'translateY(30px)';
          section.style.transition = 'opacity 0.6s ease-out, transform 0.6s ease-out';
          observer.observe(section);
        }
      });
    </script>
  </body>
</html>
