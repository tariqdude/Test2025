---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import Header from '../../components/Header.astro';
import Card from '../../components/ui/Card.astro';
import Button from '../../components/ui/Button.astro';
import Grid from '../../components/ui/Grid.astro';
import Animate from '../../components/ui/Animate.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../../consts';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body class="bg-white dark:bg-gray-900 min-h-screen">
		<Header />
		<main class="container mx-auto px-4 sm:px-6 lg:px-8 py-12">
			<!-- Blog Header -->
			<div class="max-w-3xl mx-auto text-center mb-16">
				<Animate animation="fade-in" duration="slow">
					<h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6">
						Our Blog
					</h1>
					<p class="text-xl text-gray-600 dark:text-gray-300">
						Insights, tutorials, and updates from our team of experts.
					</p>
				</Animate>
			</div>

			<!-- Blog Posts Grid -->
			<Grid cols={3} gap="lg" responsive={{ sm: 1, md: 2, lg: 3 }}>
				{posts.map((post, index) => {
					const delayMap = ['none', 'sm', 'md'] as const;
					const delay = index < 3 ? delayMap[index] : 'none';
					
					return (
					<Animate 
						animation="slide-up" 
						delay={delay}
						trigger="scroll"
					>
						<Card variant="default" className="h-full">
							{post.data.heroImage && (
								<div class="aspect-video overflow-hidden rounded-t-lg mb-4">
									<Image
										src={post.data.heroImage}
										alt={post.data.title}
										class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
										width={400}
										height={225}
									/>
								</div>
							)}
							
							<div class="p-6">
								<div class="text-sm text-primary-600 dark:text-primary-400 mb-2">
									<FormattedDate date={post.data.pubDate} />
								</div>
								
								<h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-3 line-clamp-2">
									{post.data.title}
								</h2>
								
								{post.data.description && (
									<p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">
										{post.data.description}
									</p>
								)}
								
								<Button 
									variant="outline" 
									size="sm" 
									href={`/blog/${post.id}/`}
									className="w-full"
								>
									Read More
								</Button>
							</div>
						</Card>
					</Animate>
					);
				})}
			</Grid>

			{posts.length === 0 && (
				<div class="text-center py-12">
					<div class="text-gray-400 dark:text-gray-500 mb-4">
						<svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
						</svg>
					</div>
					<h3 class="text-xl font-medium text-gray-900 dark:text-white mb-2">
						No blog posts yet
					</h3>
					<p class="text-gray-600 dark:text-gray-300">
						Check back soon for new content!
					</p>
				</div>
			)}
		</main>
		<Footer />
	</body>
</html>
