---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href: rawHref, class: className, ...props } = Astro.props;
// Ensure href is a string
const hrefStr = rawHref != null ? rawHref.toString() : '';
// Build link under BASE_URL
const base = import.meta.env.BASE_URL ?? '/';
const trimmed = hrefStr.replace(/^\//, '');
const resolvedHref = `${base.endsWith('/') ? base : base + '/'}${trimmed}`;
// Active when current path matches this resolved href
const isActive = Astro.url.pathname === resolvedHref;
---

<a href={resolvedHref} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
	}
	a.active {
		font-weight: bolder;
		text-decoration: underline;
	}
</style>
