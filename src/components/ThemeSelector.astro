---
import type { ThemeName } from '../styles/theme.ts';

interface Props {
  currentTheme?: ThemeName;
}

const { currentTheme = 'dark' } = Astro.props;
---

<div class="theme-selector">
  <label for="theme-select" class="sr-only">Choose theme</label>
  <select id="theme-select" class="theme-select" data-current={currentTheme}>
    <option value="dark">üåô Dark</option>
    <option value="light">‚òÄÔ∏è Light</option>
    <option value="cyberpunk">‚ö° Cyberpunk</option>
  </select>
</div>

<style>
  .theme-selector {
    position: relative;
    display: inline-block;
  }

  .theme-select {
    appearance: none;
    background: var(--color-surface, #1f2937);
    border: 1px solid var(--color-border, #374151);
    border-radius: 8px;
    color: var(--color-text-primary, #ffffff);
    cursor: pointer;
    font-size: 14px;
    padding: 8px 32px 8px 12px;
    transition: all 0.2s ease;
    min-width: 140px;
  }

  .theme-select:hover {
    background: var(--color-border, #374151);
  }

  .theme-select:focus {
    outline: none;
    border-color: var(--color-primary, #3b82f6);
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }

  .theme-selector::after {
    content: '‚ñº';
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
    color: var(--color-text-secondary, #9ca3af);
    font-size: 12px;
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
</style>

<script>
  // Theme switching functionality
  function setTheme(themeName) {
    document.documentElement.setAttribute('data-theme', themeName);
    localStorage.setItem('preferred-theme', themeName);
    
    // Update CSS variables by reloading the theme provider
    location.reload();
  }
  
  function getPreferredTheme() {
    const saved = localStorage.getItem('preferred-theme');
    if (saved) return saved;
    
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  }
  
  // Initialize theme selector
  document.addEventListener('DOMContentLoaded', function() {
    const selector = document.getElementById('theme-select');
    const preferredTheme = getPreferredTheme();
    
    if (selector && selector instanceof HTMLSelectElement) {
      selector.value = preferredTheme;
      
      selector.addEventListener('change', function(e) {
        const target = e.target;
        if (target && target instanceof HTMLSelectElement) {
          setTheme(target.value);
        }
      });
    }
  });
</script>
