---
export interface Props {
  variant?: 'default' | 'glass' | 'neon' | 'holographic' | 'morphism' | 'neumorphism' | 'particle';
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full';
  className?: string;
  href?: string;
  interactive?: boolean;
  tilt?: boolean;
  glow?: boolean;
  particles?: boolean;
  gradient?: string;
  borderGradient?: string;
  shadowColor?: string;
  animation?: 'none' | 'float' | 'pulse' | 'bounce' | 'spin' | 'slide' | 'fade';
  animationDelay?: number;
  hoverEffect?: 'lift' | 'scale' | 'rotate' | 'glow' | 'blur' | 'none';
}

const { 
  variant = 'default', 
  size = 'md', 
  className = '', 
  href,
  interactive = true,
  tilt = false,
  glow = false,
  particles = false,
  gradient,
  borderGradient,
  shadowColor,
  animation = 'none',
  animationDelay = 0,
  hoverEffect = 'lift'
} = Astro.props;

const baseClasses = 'relative overflow-hidden rounded-2xl transition-all duration-700 ease-out transform-gpu';

const variants = {
  default: 'bg-white dark:bg-neutral-900 border border-neutral-200 dark:border-neutral-700 shadow-xl',
  glass: 'bg-white/20 dark:bg-black/20 backdrop-blur-xl border border-white/30 dark:border-white/10 shadow-2xl',
  neon: 'bg-gradient-to-br from-cyan-900/50 to-purple-900/50 border-2 border-cyan-400/50 shadow-2xl shadow-cyan-500/25',
  holographic: 'bg-gradient-to-br from-pink-500/20 via-purple-500/20 to-cyan-500/20 border border-white/30 backdrop-blur-lg shadow-2xl',
  morphism: 'bg-gradient-to-br from-white/10 to-white/5 backdrop-blur-2xl border border-white/20 shadow-2xl',
  neumorphism: 'bg-neutral-100 dark:bg-neutral-800 shadow-neumorphism dark:shadow-neumorphism-dark',
  particle: 'bg-gradient-to-br from-indigo-900/80 to-purple-900/80 backdrop-blur-sm border border-indigo-500/30 shadow-2xl'
};

const sizes = {
  xs: 'p-3 min-h-[120px]',
  sm: 'p-4 min-h-[150px]',
  md: 'p-6 min-h-[200px]',
  lg: 'p-8 min-h-[250px]',
  xl: 'p-10 min-h-[300px]',
  full: 'p-6 h-full w-full'
};

const hoverEffects = {
  lift: 'hover:-translate-y-4 hover:shadow-3xl',
  scale: 'hover:scale-105',
  rotate: 'hover:rotate-1',
  glow: 'hover:shadow-2xl hover:shadow-primary-500/50',
  blur: 'hover:backdrop-blur-3xl',
  none: ''
};

const animations = {
  none: '',
  float: 'animate-float',
  pulse: 'animate-pulse-slow',
  bounce: 'animate-bounce-slow',
  spin: 'animate-spin-slow',
  slide: 'animate-slide-in',
  fade: 'animate-fade-in'
};

const interactiveClasses = interactive ? 'cursor-pointer select-none' : '';
const tiltClasses = tilt ? 'hover:rotate-3d' : '';

const classes = `${baseClasses} ${variants[variant]} ${sizes[size]} ${hoverEffects[hoverEffect]} ${animations[animation]} ${interactiveClasses} ${tiltClasses} ${className}`;

const Tag = href ? 'a' : 'div';

const customStyle = [
  gradient && `background: ${gradient}`,
  shadowColor && `box-shadow: 0 25px 50px -12px ${shadowColor}`,
  animationDelay > 0 && `animation-delay: ${animationDelay}s`
].filter(Boolean).join('; ');
---

<Tag 
  href={href} 
  class={classes}
  style={customStyle}
  data-tilt={tilt}
>
  {/* Holographic effect background */}
  {variant === 'holographic' && (
    <div class="absolute inset-0 bg-gradient-to-br from-pink-500/10 via-purple-500/10 to-cyan-500/10 animate-gradient-shift"></div>
  )}
  
  {/* Neon glow effect */}
  {(variant === 'neon' || glow) && (
    <div class="absolute -inset-1 bg-gradient-to-r from-cyan-600 via-purple-600 to-pink-600 rounded-2xl blur opacity-30 group-hover:opacity-100 transition duration-1000 group-hover:duration-200 animate-tilt"></div>
  )}
  
  {/* Border gradient */}
  {borderGradient && (
    <div class="absolute inset-0 rounded-2xl p-[1px] bg-gradient-to-br" style={`background: ${borderGradient}`}>
      <div class="h-full w-full rounded-2xl bg-white dark:bg-neutral-900"></div>
    </div>
  )}
  
  {/* Particle effect for particle variant */}
  {(variant === 'particle' || particles) && (
    <div class="absolute inset-0 overflow-hidden">
      <div class="particle particle-1"></div>
      <div class="particle particle-2"></div>
      <div class="particle particle-3"></div>
      <div class="particle particle-4"></div>
      <div class="particle particle-5"></div>
    </div>
  )}
  
  {/* Content wrapper with relative positioning */}
  <div class="relative z-10 h-full flex flex-col">
    <slot />
  </div>
  
  {/* Interactive hover overlay */}
  {interactive && (
    <div class="absolute inset-0 bg-gradient-to-br from-white/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
  )}
  
  {/* Shimmer effect */}
  <div class="absolute inset-0 -translate-x-full group-hover:translate-x-full bg-gradient-to-r from-transparent via-white/20 to-transparent transition-transform duration-1000 ease-out"></div>
</Tag>

<style>
  /* Neumorphism shadows */
  .shadow-neumorphism {
    box-shadow: 
      20px 20px 60px #bebebe,
      -20px -20px 60px #ffffff;
  }
  
  .shadow-neumorphism-dark {
    box-shadow: 
      20px 20px 60px #1a1a1a,
      -20px -20px 60px #2e2e2e;
  }
  
  /* 3D shadow */
  .shadow-3xl {
    box-shadow: 0 35px 60px -12px rgba(0, 0, 0, 0.25);
  }
  
  /* Enhanced animations */
  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    25% { transform: translateY(-5px) rotate(0.5deg); }
    50% { transform: translateY(-10px) rotate(0deg); }
    75% { transform: translateY(-5px) rotate(-0.5deg); }
  }
  
  @keyframes gradient-shift {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }
  
  @keyframes rotate-3d {
    0% { transform: perspective(1000px) rotateY(0deg) rotateX(0deg); }
    25% { transform: perspective(1000px) rotateY(5deg) rotateX(2deg); }
    50% { transform: perspective(1000px) rotateY(0deg) rotateX(0deg); }
    75% { transform: perspective(1000px) rotateY(-5deg) rotateX(-2deg); }
    100% { transform: perspective(1000px) rotateY(0deg) rotateX(0deg); }
  }
  
  @keyframes tilt {
    0%, 50%, 100% { transform: rotate(0deg); }
    25% { transform: rotate(1deg); }
    75% { transform: rotate(-1deg); }
  }
  
  @keyframes slide-in {
    from {
      opacity: 0;
      transform: translateY(30px) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }
  
  /* Particle animations */
  .particle {
    position: absolute;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    pointer-events: none;
  }
  
  .particle-1 {
    width: 4px;
    height: 4px;
    top: 20%;
    left: 20%;
    animation: float 3s ease-in-out infinite;
  }
  
  .particle-2 {
    width: 6px;
    height: 6px;
    top: 60%;
    left: 80%;
    animation: float 4s ease-in-out infinite reverse;
  }
  
  .particle-3 {
    width: 3px;
    height: 3px;
    top: 80%;
    left: 30%;
    animation: float 5s ease-in-out infinite;
    animation-delay: 1s;
  }
  
  .particle-4 {
    width: 5px;
    height: 5px;
    top: 40%;
    left: 70%;
    animation: float 3.5s ease-in-out infinite;
    animation-delay: 2s;
  }
  
  .particle-5 {
    width: 2px;
    height: 2px;
    top: 15%;
    left: 60%;
    animation: float 4.5s ease-in-out infinite reverse;
    animation-delay: 0.5s;
  }
  
  /* Utility classes */
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  .animate-pulse-slow {
    animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  .animate-bounce-slow {
    animation: bounce 2s infinite;
  }
  
  .animate-spin-slow {
    animation: spin 8s linear infinite;
  }
  
  .animate-slide-in {
    animation: slide-in 0.8s ease-out both;
  }
  
  .animate-gradient-shift {
    animation: gradient-shift 3s ease-in-out infinite;
    background-size: 400% 400%;
  }
  
  .animate-tilt {
    animation: tilt 10s ease-in-out infinite;
  }
  
  .hover\\:rotate-3d:hover {
    animation: rotate-3d 2s ease-in-out infinite;
  }
  
  /* Group hover effects */
  .group:hover .animate-tilt {
    animation-duration: 0.2s;
  }
</style>
