---
export interface AdvancedCardProps {
  variant?: 'modern' | 'glass' | 'neumorphism' | 'gradient' | 'neon' | 'floating' | 'magazine';
  size?: 'sm' | 'md' | 'lg' | 'xl';
  interactive?: boolean;
  hover3d?: boolean;
  glow?: boolean;
  backdrop?: boolean;
  className?: string;
  id?: string;
}

const {
  variant = 'modern',
  size = 'md',
  interactive = true,
  hover3d = false,
  glow = false,
  backdrop = false,
  className = '',
  id,
  ...rest
} = Astro.props as AdvancedCardProps;

const baseClasses = [
  'relative',
  'overflow-hidden',
  'transition-all',
  'duration-500',
  'ease-out',
];

const sizeClasses = {
  sm: 'p-4 rounded-lg',
  md: 'p-6 rounded-xl',
  lg: 'p-8 rounded-2xl',
  xl: 'p-10 rounded-3xl',
};

const variantClasses = {
  modern: [
    'bg-white',
    'border',
    'border-gray-100',
    'shadow-soft',
    interactive && 'hover:shadow-strong',
    interactive && 'hover:-translate-y-2',
    hover3d && 'hover:rotate-y-3',
    'dark:bg-gray-800',
    'dark:border-gray-700',
  ],
  glass: [
    'bg-white/10',
    'backdrop-blur-xl',
    'border',
    'border-white/20',
    'shadow-xl',
    interactive && 'hover:bg-white/20',
    interactive && 'hover:border-white/30',
    interactive && 'hover:shadow-2xl',
    'dark:bg-black/10',
    'dark:border-white/10',
  ],
  neumorphism: [
    'bg-gray-50',
    'shadow-[8px_8px_16px_#d1d9e6,_-8px_-8px_16px_#ffffff]',
    interactive && 'hover:shadow-[12px_12px_24px_#d1d9e6,_-12px_-12px_24px_#ffffff]',
    'dark:bg-gray-800',
    'dark:shadow-[8px_8px_16px_#1a1a1a,_-8px_-8px_16px_#2a2a2a]',
  ],
  gradient: [
    'bg-gradient-to-br',
    'from-blue-50',
    'via-purple-50',
    'to-pink-50',
    'border',
    'border-gradient-to-r',
    'border-blue-200/50',
    interactive && 'hover:from-blue-100',
    interactive && 'hover:via-purple-100',
    interactive && 'hover:to-pink-100',
    'dark:from-blue-900/20',
    'dark:via-purple-900/20',
    'dark:to-pink-900/20',
  ],
  neon: [
    'bg-gray-900',
    'border',
    'border-cyan-400/50',
    'shadow-[0_0_20px_rgba(34,211,238,0.3)]',
    interactive && 'hover:border-cyan-300',
    interactive && 'hover:shadow-[0_0_30px_rgba(34,211,238,0.5)]',
    glow && 'animate-pulse',
  ],
  floating: [
    'bg-white',
    'shadow-[0_20px_40px_rgba(0,0,0,0.1)]',
    'border-0',
    interactive && 'hover:shadow-[0_30px_60px_rgba(0,0,0,0.15)]',
    interactive && 'hover:-translate-y-4',
    'dark:bg-gray-800',
  ],
  magazine: [
    'bg-white',
    'border-l-4',
    'border-blue-500',
    'shadow-md',
    interactive && 'hover:border-blue-600',
    interactive && 'hover:shadow-lg',
    interactive && 'hover:pl-6',
    'dark:bg-gray-800',
    'dark:border-blue-400',
  ],
};

const cardClasses = [
  ...baseClasses,
  sizeClasses[size],
  ...variantClasses[variant].filter(Boolean),
  hover3d && 'transform-gpu',
  hover3d && 'preserve-3d',
  backdrop && 'backdrop-blur-sm',
  className,
].filter(Boolean).join(' ');
---

<div 
  class={cardClasses}
  id={id}
  {...rest}
>
  {backdrop && (
    <div class="absolute inset-0 bg-gradient-to-br from-blue-500/5 to-purple-500/5 pointer-events-none"></div>
  )}
  
  {variant === 'neon' && (
    <div class="absolute inset-0 bg-gradient-to-br from-cyan-500/5 to-blue-500/5 pointer-events-none"></div>
  )}
  
  {glow && (
    <div class="absolute -inset-1 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg blur opacity-20 group-hover:opacity-40 transition duration-1000"></div>
  )}
  
  <div class="relative z-10">
    <slot />
  </div>
  
  {hover3d && (
    <div class="absolute inset-0 bg-gradient-to-br from-transparent to-black/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none"></div>
  )}
</div>

<style>
  .hover\:rotate-y-3:hover {
    transform: perspective(1000px) rotateY(3deg) translateY(-8px);
  }
  
  .preserve-3d {
    transform-style: preserve-3d;
  }
  
  .transform-gpu {
    transform: translateZ(0);
  }
</style>
