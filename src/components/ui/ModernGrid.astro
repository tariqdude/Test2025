---
export interface Props {
  cols?: 1 | 2 | 3 | 4 | 5 | 6 | 12;
  gap?: 'none' | 'sm' | 'md' | 'lg' | 'xl';
  className?: string;
  responsive?: {
    sm?: 1 | 2 | 3 | 4 | 5 | 6 | 12;
    md?: 1 | 2 | 3 | 4 | 5 | 6 | 12;
    lg?: 1 | 2 | 3 | 4 | 5 | 6 | 12;
    xl?: 1 | 2 | 3 | 4 | 5 | 6 | 12;
  };
}

const { 
  cols = 3, 
  gap = 'md', 
  className = '',
  responsive
} = Astro.props;

const gaps = {
  none: 'gap-0',
  sm: 'gap-4',
  md: 'gap-6',
  lg: 'gap-8',
  xl: 'gap-12'
};

const columns = {
  1: 'grid-cols-1',
  2: 'grid-cols-2',
  3: 'grid-cols-3',
  4: 'grid-cols-4',
  5: 'grid-cols-5',
  6: 'grid-cols-6',
  12: 'grid-cols-12'
};

const responsiveClasses = responsive ? [
  responsive.sm ? `sm:grid-cols-${responsive.sm}` : '',
  responsive.md ? `md:grid-cols-${responsive.md}` : '',
  responsive.lg ? `lg:grid-cols-${responsive.lg}` : '',
  responsive.xl ? `xl:grid-cols-${responsive.xl}` : ''
].filter(Boolean).join(' ') : '';

const classes = `grid ${columns[cols]} ${gaps[gap]} ${responsiveClasses} ${className}`.trim();
---

<div class={classes}>
  <slot />
</div>
