---
export interface NavigationItem {
  label: string;
  href: string;
  icon?: string;
  children?: NavigationItem[];
  badge?: string;
  external?: boolean;
}

export interface Props {
  items: NavigationItem[];
  className?: string;
  variant?: 'horizontal' | 'vertical' | 'mobile';
  activeItem?: string;
}

const { 
  items, 
  className = '', 
  variant = 'horizontal',
  activeItem 
} = Astro.props;

const isActive = (href: string) => {
  if (activeItem) {
    return activeItem === href;
  }
  return Astro.url.pathname === href;
};

const getVariantClasses = (variant: string) => {
  switch (variant) {
    case 'vertical':
      return 'flex flex-col space-y-2';
    case 'mobile':
      return 'flex flex-col space-y-4 md:hidden';
    case 'horizontal':
    default:
      return 'flex items-center space-x-8';
  }
};
---

<nav class={`${getVariantClasses(variant)} ${className}`}>
  {items.map((item) => (
    <div class="relative group">
      <a
        href={item.href}
        class={`
          flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200
          ${isActive(item.href) 
            ? 'text-primary-600 dark:text-primary-400 bg-primary-50 dark:bg-primary-900/20' 
            : 'text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-gray-800'
          }
        `}
        {...(item.external && { 
          target: '_blank', 
          rel: 'noopener noreferrer' 
        })}
      >
        {item.icon && (
          <svg
            class="w-4 h-4"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <!-- Add icon paths here based on item.icon -->
            {item.icon === 'home' && (
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"
              />
            )}
            {item.icon === 'user' && (
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
              />
            )}
            {item.icon === 'briefcase' && (
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2-2v2m8 0H8m8 0v2a2 2 0 01-2 2H10a2 2 0 01-2-2V6"
              />
            )}
            {item.icon === 'chart-bar' && (
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
              />
            )}
            {item.icon === 'mail' && (
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
              />
            )}
            {item.icon === 'currency-dollar' && (
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"
              />
            )}
            {item.icon === 'external-link' && (
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
              />
            )}
          </svg>
        )}
        <span>{item.label}</span>
        {item.badge && (
          <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800 dark:bg-primary-900 dark:text-primary-200">
            {item.badge}
          </span>
        )}
        {item.external && (
          <svg
            class="w-3 h-3 opacity-50"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
            />
          </svg>
        )}
      </a>
      
      {item.children && (
        <div class="absolute top-full left-0 mt-2 w-48 bg-white dark:bg-gray-800 rounded-md shadow-lg ring-1 ring-black ring-opacity-5 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50">
          <div class="py-1">
            {item.children.map((child) => (
              <a
                href={child.href}
                class="block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-primary-600 dark:hover:text-primary-400"
                {...(child.external && { 
                  target: '_blank', 
                  rel: 'noopener noreferrer' 
                })}
              >
                {child.label}
              </a>
            ))}
          </div>
        </div>
      )}
    </div>
  ))}
</nav>
